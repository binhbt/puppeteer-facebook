#!/usr/bin/env node
// Usage:
// SHow the browser
// $ ./fbpost 426433944823847 "Xin chao" email pass visible
//
// Run on background
// $ ./fbpost 426433944823847 "Xin chao" email pass
//
async function clear(page, selector) {
  await page.evaluate(selector => {
    document.querySelector(selector).value = "";
  }, selector);
}
async function fillValue(page, selector, value) {
  await page.evaluate(selector => {
    document.querySelector(selector).value = value;
  }, selector);
}
(async() => {
 const puppeteer = require('puppeteer');

 console.log(process.argv);
 var url = 'https://www.facebook.com/';
 var visiblex = false;
 var message = '';
 var email ='';
 var pass ='';
 if (process.argv.length >=6) {
    url +=process.argv[2];
    message = process.argv[3];
    email=process.argv[4];
    pass=process.argv[5];
 }
 if (process.argv.length == 7) {
    if(process.argv[6] == 'visible'){
      visiblex = true;
    }
 }
 //process.stdout.write(process.argv[6]);
 //process.stdout.write(visiblex);
 const browser = await puppeteer.launch({
   headless: !visiblex,
   //userDataDir: "data"
   slowMo: 250, args: ["--disable-notifications"]
 });
 const page = (await browser.pages())[0];
 await page.goto('https://www.facebook.com');
 await page.waitFor(3000);
   // wait for homepage to load after a manual login
   await clear(page,'#email');
   await page.click('#email');
   await page.keyboard.type(email);

   await clear(page,'#pass');
   await page.click('#pass');
   await page.keyboard.type(pass);

   await page.keyboard.press('Enter'); // Enter Key
   await page.waitFor(3000);

   //Post to facebook
   await page.goto(url);
   process.stdout.write(message);

   // use keyboard shortcut to open and focus on create new post
   await page.keyboard.press('KeyP');
   // wait for emoji icon as proxy for "loaded and post ready"
   await page.waitFor(2000);
   // keyboard shortcut put focus in place so we can just type
   await page.keyboard.type(message);
   await page.waitFor(1000);
   await page.click('a[role="presentation"]');
   await page.waitFor(1000);
   await page.click('a[rel="ignore"]');
   await page.waitFor(2000);
   const input = await page.$('input[type="file"]')
   await input.uploadFile('/home/leo/Desktop/101723142-vector-funny-cartoon-red-friendly-robot-character-isolated-on-white-background-kids-3d-robot-toy-cha.jpg');

   await page.waitFor(2000);
   // click submit
   const html = await page.content();
   //process.stdout.write(html);
   await page.click('[data-testid="react-composer-post-button"]');
   // can’t find reliable way to detect that it posted successfully,
   // but if we close too soon it won’t finish the post request
   await new Promise(res => setTimeout(res, 2000));
 
 await browser.close();
})();
